/* FILENAME : task9.c */
/* Konstantin Philippof */
/* Last update : 16.03.2022 */
/* Mospolytech */
/* база данных №9: Фамилия И.О., количество оценок, оценки, средний балл */
/*база данных на C и простое меню с функциями: добавка, удаление, поиск, вывод всех элементов и запись в/из файл(а)*/
/*эта база данных позволяет
*-добавлять нового студента,
*-удалять студента (по номеру),
*-выводить на экран список всех студентов,
*-сохранять в файле,
*-восстанавливать из файла базу данных, 
*-упорядочивать студентов по фамилии.
*В базе данных имеются следующие поля - номер, фамилия, имя и оценка студента. */

// #define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>

/* Структура для хранения информации про одного студента */
typedef struct tagITEM
{
    char Surname[20], Name[20];
    int Amount; //количество оценок
    int Grade;  // оценка
    float Average; // средний балл
} ITEM;

/* Массив максимум на 20 студентов */
ITEM Men[20];

/* Количество занятых элементов в массиве */
int Number;

/* Функция для вывода всех элементов */
void Print(void)
{
    int i;

    printf(" N  Surname              Name               Amount                    Grades                        Average\n");
    for (i = 0; i < Number; i++)
        printf("%2i. %-20s %-20s %-27i %-28i  %-29.1f\n", i + 1, 
        Men[i].Surname, Men[i].Name, Men[i].Amount, Men[i].Grade, Men[i].Average);
} /* End of 'Print' function */

/* Функция для добавления элемента */
void Add(void)
{
    if (Number == 19)
    {
        fprintf(stderr, "It's not possible to add another element\n");
        return;
    }

    printf("Enter surname > ");
    scanf("%s", Men[Number].Surname);
    printf("Enter name > ");
    scanf("%s", Men[Number].Name);
    printf("Enter amount > ");
    scanf("%i", &Men[Number].Amount);
    printf("Enter grade > ");
    scanf("%i", &Men[Number].Grade);
    printf("Enter average > ");
    scanf("%f", &Men[Number].Average);

    Number++;
} /* End of 'Add' function */

/* Функция для удаления элемента */
void Del(void)
{
    int i;

    Print();
    printf("Enter the number of the item to delete > ");
    scanf("%i", &i);
    if (i < 1 || i > Number)
    {
        fprintf(stderr, "The element № %i does not exist\n", i);
        return;
    }

    for (i--; i < Number - 1; i++)
        Men[i] = Men[i + 1];

    Number--;
} /* End of 'Del' function */

/* Функция для сохранения массива в файле */
void Save(void)
{
    FILE* F;
    int i;

    if ((F = fopen("task1.dat", "wt")) == NULL)
    {
        fprintf(stderr, "Unable to open a file 'task1.dta' for writing \n");
        return;
    }

    fprintf(F, "%i\n", Number);
    for (i = 0; i < Number; i++)
        fprintf(F, "%s\n%s\n%i\n%i\n%f\n", Men[i].Surname, Men[i].Name, Men[i].Amount, Men[i].Grade, Men[i].Average);

    fclose(F);
} /* End of 'Save' function */

/* Функция для чтения массива из файла */
void Load(void)
{
    FILE* F;
    int i;

    if ((F = fopen("task1.dat", "rt")) == NULL)
    {
        fprintf(stderr, "Unable to open file 'task1.dta' for reading\n");
        return;
    }

    fscanf(F, "%i", &Number);
    for (i = 0; i < Number; i++)
        fscanf(F, "%s%s%i%i%f", Men[i].Surname, Men[i].Name, &Men[i].Amount, Men[i].Grade, Men[i].Average);

    fclose(F);
} /* End of 'Load' function */

/* Функция для упорядочивания массива по фамилии */
void Sort(void)
{
    int i, j;
    ITEM Temp;

    for (j = Number - 1; j > 0; j--)
        for (i = 0; i < j; i++)
            if (strcmp(Men[i].Surname, Men[i + 1].Surname) > 0)
            {
                Temp = Men[i];
                Men[i] = Men[i + 1];
                Men[i + 1] = Temp;
            }
} /* End of 'Sort' function */

/* Вывод меню и чтение номера выбранного пункта */
int Menu(void)
{
    int c = 0;

    while ((c < '0' || c > '6') && c != 27)
    {
        printf("0 : exit\n"
            "1 : add\n"
            "2 : save\n"
            "3 : load\n"
            "4 : display\n"
            "5 : order\n"
            "6 : delete\n"
            ">");
        c = _getch();
        printf("%c\n", c);
    }
    return c;
} /* End of 'Menu' function */

/* Основная функция */
void main(void)
{
    int Selection;

    Number = 0;
    while ((Selection = Menu()) != '0' && Selection != 27)
        switch (Selection)
        {
        case '1':
            Add();
            break;
        case '2':
            Save();
            break;
        case '3':
            Load();
            break;
        case '4':
            Print();
            break;
        case '5':
            Sort();
            break;
        case '6':
            Del();
            break;
        }
}